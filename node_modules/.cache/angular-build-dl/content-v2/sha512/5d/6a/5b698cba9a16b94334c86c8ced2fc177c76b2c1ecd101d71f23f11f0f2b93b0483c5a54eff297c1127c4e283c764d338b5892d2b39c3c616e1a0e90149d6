{"version":3,"sources":["webpack:///src/app/checkbox.directive.ts","webpack:///src/app/filter-custom.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/app/todo-list/todo-list.component.ts","webpack:///src/app/todo-list/todo-list.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/highlight-button.directive.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CheckboxDirective","el","isCompleted","itemCompleted","update","isAlreadyCompleted","isChecked","nativeElement","childNodes","classList","add","remove","FilterCustomPipe","itemList","displayState","filter","item","completed","environment","production","id","TodoListComponent","allItemsList","itemsLeft","alreadyCompleted","event","input","which","value","trim","length","obj","isHovering","push","reset","itemToBeDeleted","index","findIndex","splice","selectedItem","e","target","clearCompleted","hoveredItem","onDelete","previousIndex","currentIndex","onEnter","drop","AppComponent","document","title","mode","body","style","background","changeMode","HighlightButtonDirective","element","btn","AppModule","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Directive, HostBinding, HostListener, Input, ElementRef } from '@angular/core';\n\n\n\n@Directive({\n  selector: '[appCheckbox]'\n})\nexport class CheckboxDirective {\n  isCompleted: boolean = false;\n  @Input() set setCompletedStatus(itemCompleted){\n      this.update(itemCompleted)\n  }\n  @HostBinding('class.checked') isChecked\n  @HostListener('click') onClick() {\n    this.update(null)\n  }\n\n  update(isAlreadyCompleted) {\n    this.isCompleted = !this.isCompleted\n\n    this.isChecked = isAlreadyCompleted != null ? isAlreadyCompleted : this.isCompleted\n    if (this.isChecked)\n      this.el.nativeElement.childNodes[0].classList.add('checked')\n    else\n      this.el.nativeElement.childNodes[0].classList.remove('checked')\n  }\n\n\n  constructor(private el: ElementRef) { \n   \n  }\n\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterCustom',\n  pure: false\n})\nexport class FilterCustomPipe implements PipeTransform {\n\n  transform(itemList: Array<any>, displayState: string): Array<any> {\n\n    if (displayState === 'active')\n      return itemList.filter(item => item.completed == false);\n    else if (displayState === 'completed')\n      return itemList.filter(item => item.completed == true);\n    else\n      return itemList\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, ViewChildren } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CheckboxDirective } from '../checkbox.directive';\nimport { Task } from '../Model/task';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\n\n\n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent  {\n  @Input() displayMode\n  @ViewChildren(CheckboxDirective) checkbox;\n  allItemsList: Array<any> = [];\n  id: number = 0;\n  itemsLeft: number = 0;\n  displayState: string = 'all';\n  alreadyCompleted:boolean= false;\n\n\n  constructor(  ) { }\n\n  onEnter(event: any, input: NgForm): void {\n    if (event.which === 13) {\n\n      if (input.value.value.trim().length === 0)\n        return\n\n      let obj: Task = {\n        id: this.id,\n        completed: this.alreadyCompleted,\n        value: input.value.value,\n        isHovering: false\n      }\n      this.allItemsList.push(obj)\n\n      this.id++;\n      if(!this.alreadyCompleted)\n        this.itemsLeft++;\n      input.reset()\n    }\n\n  }\n\n  onDelete(itemToBeDeleted: Task): void {\n    let index = this.allItemsList.findIndex(item => { return item.id === itemToBeDeleted.id })\n    if (!itemToBeDeleted.completed)\n      this.itemsLeft--;\n    this.allItemsList.splice(index, 1)\n\n  }\n\n  toggleCompleted(selectedItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item === selectedItem\n    })\n    this.allItemsList[index].completed = !this.allItemsList[index].completed;\n    if (selectedItem.completed) this.itemsLeft--\n    else this.itemsLeft++\n\n  }\n\n  onTaskbarAction(e: any): void {\n    if (e.target.id == 'clear') {\n      this.clearCompleted()\n      return\n    }\n\n    this.displayState = e.target.id;\n  }\n\n  onMouseHover(hoveredItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item.id === hoveredItem.id\n    })\n    if (index === -1)\n      return\n    this.allItemsList[index].isHovering = true\n  }\n\n  onMouseLeave(hoveredItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item.id === hoveredItem.id\n    })\n    if (index === -1)\n      return\n    this.allItemsList[index].isHovering = false\n  }\n\n  clearCompleted() {\n    let index\n    while (1) {\n\n      index = this.allItemsList.findIndex(item => {\n        return item.completed === true\n      })\n      if (index > -1)\n        this.onDelete(this.allItemsList[index])\n      else\n        break;\n    }\n\n   \n\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.allItemsList, event.previousIndex, event.currentIndex);\n  }\n  \n\n\n\n \n\n}\n","<div  id=\"new-item\" class=\"new-item\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n    <div appCheckbox class=\"round\" (click)=\"alreadyCompleted = !alreadyCompleted\">\n        <img id='im-new' src=\"../../assets/images/icon-check.svg\">\n    </div>\n    <div>\n        <form #inputData=\"ngForm\" (keydown)=\"onEnter($event,inputData)\">\n            <input type=\"text\" id=\"new-todo\" name=\"value\" autocomplete=\"off\" placeholder=\"Create a new todo...\" ngModel>\n        </form>\n    </div>\n</div>\n\n   \n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" class=\"list\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n\n        <div cdkDrag *ngFor=\"let item of allItemsList | filterCustom:(displayState !== 'all' || allItemsList) && displayState\" class=\"items\"  (mouseover)=\"onMouseHover(item)\" (mouseleave)=\"onMouseLeave(item)\" >\n                <div appCheckbox [setCompletedStatus]=\"item.completed\" class=\"round\" (click)=\"toggleCompleted(item)\">\n                    <img  id='im-{{item.id}}' src=\"../../assets/images/icon-check.svg\">\n                </div>\n                <li class=\"list-box\"[ngClass]=\"{'completed':item.completed}\">{{item.value}}\n                    <button id=\"{{item.id}}\" class=\"close\" [ngClass]=\"{'show-close-icon':item.isHovering}\" (click)=\"onDelete(item)\"></button>\n                </li>\n        </div>\n\n        <div *ngIf=\"allItemsList.length>0\" class=\"taskbar\" (click)=\"onTaskbarAction($event)\">\n            <span id=\"remaining-items\">{{itemsLeft}} items left</span>\n            <span appHighlightButton class=\"filter-buttons\">\n                <button id=\"all\">All</button>\n                <button id=\"active\">Active</button>\n                <button id=\"completed\">Completed</button>\n            </span>\n            <span><button id=\"clear\">Clear Completed</button></span>\n           \n        \n        \n        </div>\n       \n    </div>\n    <span *ngIf=\"allItemsList.length>0\" class=\"taskbar filter-buttons-responsive\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n        <span class=\"filter-buttons-responsive\" appHighlightButton (click)=\"onTaskbarAction($event)\">\n            <button id=\"all\">All</button>\n            <button id=\"active\">Active</button>\n            <button id=\"completed\">Completed</button> \n        </span>\n    </span>\n    <p *ngIf=\"allItemsList.length>0\" style=\"text-align: center;color: hsl(233, 6%, 51%) ;\">Drag and drop to reorder list</p>\n   \n\n","import { Component,Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoApp';\n  mode = 'light'\n\n  constructor(@Inject(DOCUMENT)private document: Document){\n    this.document.body.style.background =  this.mode === 'light'?\"hsl(236, 33%, 92%)\":\"hsl(235, 21%, 11%)\";\n\n  }\n  changeMode(){\n    this.mode === 'light'?this.mode = 'dark':this.mode='light';\n    this.document.body.style.background =  this.mode === 'light'?\"hsl(236, 33%, 92%)\":\"hsl(235, 21%, 11%)\";\n  }\n}\n","<div id=\"header\" [ngClass]=\"{'light-mode':mode === 'light','dark-mode':mode === 'dark'}\"></div>\n<div class=\"input\">\n  <div class=\"title\">\n    <div class=\"heading\">T O D O\n    </div>\n    <button id=\"mode-icon\" [ngClass]=\"{'icon-light':mode === 'light','icon-dark':mode === 'dark'}\"\n      (click)=\"changeMode()\"></button>\n  </div>\n\n  <todo-list [displayMode]=\"mode\"></todo-list>\n</div>","import { Directive,HostListener,ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlightButton]'\n})\nexport class HighlightButtonDirective {\n\n  @HostListener('click', ['$event.target']) handleClick(btn){\n    this.element.nativeElement.childNodes[0].classList = ['']\n    this.element.nativeElement.childNodes[1].classList = ['']\n    this.element.nativeElement.childNodes[2].classList = ['']\n      if(btn.id === 'all'){\n        this.element.nativeElement.childNodes[0].classList.add('highlight')\n      }else if(btn.id === 'active'){\n        this.element.nativeElement.childNodes[1].classList.add('highlight')\n      }else if(btn.id === 'completed'){\n        this.element.nativeElement.childNodes[2].classList.add('highlight')\n      }\n  }\n  constructor(private element:ElementRef) { \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { FilterCustomPipe } from './filter-custom.pipe';\nimport { CheckboxDirective } from './checkbox.directive';\nimport { HighlightButtonDirective } from './highlight-button.directive';\nimport { DragDropModule } from '@angular/cdk/drag-drop'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    FilterCustomPipe,\n    CheckboxDirective,\n    HighlightButtonDirective\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    DragDropModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}