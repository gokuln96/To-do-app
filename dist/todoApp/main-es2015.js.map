{"version":3,"sources":["./src/app/checkbox.directive.ts","./src/app/filter-custom.pipe.ts","./src/environments/environment.ts","./src/app/todo-list/todo-list.component.ts","./src/app/todo-list/todo-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/highlight-button.directive.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Directive, HostBinding, HostListener, Input, ElementRef } from '@angular/core';\n\n\n\n@Directive({\n  selector: '[appCheckbox]'\n})\nexport class CheckboxDirective {\n  isCompleted: boolean = false;\n  @Input() set setCompletedStatus(itemCompleted){\n      this.update(itemCompleted)\n  }\n  @HostBinding('class.checked') isChecked\n  @HostListener('click') onClick() {\n    this.update(null)\n  }\n\n  update(isAlreadyCompleted) {\n    this.isCompleted = !this.isCompleted\n\n    this.isChecked = isAlreadyCompleted != null ? isAlreadyCompleted : this.isCompleted\n    if (this.isChecked)\n      this.el.nativeElement.childNodes[0].classList.add('checked')\n    else\n      this.el.nativeElement.childNodes[0].classList.remove('checked')\n  }\n\n\n  constructor(private el: ElementRef) { \n   \n  }\n\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterCustom',\n  pure: false\n})\nexport class FilterCustomPipe implements PipeTransform {\n\n  transform(itemList: Array<any>, displayState: string): Array<any> {\n\n    if (displayState === 'active')\n      return itemList.filter(item => item.completed == false);\n    else if (displayState === 'completed')\n      return itemList.filter(item => item.completed == true);\n    else\n      return itemList\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, ViewChildren } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CheckboxDirective } from '../checkbox.directive';\nimport { Task } from '../Model/task';\nimport {CdkDragDrop, moveItemInArray, transferArrayItem} from '@angular/cdk/drag-drop';\n\n\n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent  {\n  @Input() displayMode\n  @ViewChildren(CheckboxDirective) checkbox;\n  allItemsList: Array<any> = [];\n  id: number = 0;\n  itemsLeft: number = 0;\n  displayState: string = 'all';\n  alreadyCompleted:boolean= false;\n\n\n  constructor(  ) { }\n\n  onEnter(event: any, input: NgForm): void {\n    if (event.which === 13) {\n\n      if (input.value.value.trim().length === 0)\n        return\n\n      let obj: Task = {\n        id: this.id,\n        completed: this.alreadyCompleted,\n        value: input.value.value,\n        isHovering: false\n      }\n      this.allItemsList.push(obj)\n\n      this.id++;\n      if(!this.alreadyCompleted)\n        this.itemsLeft++;\n      input.reset()\n    }\n\n  }\n\n  onDelete(itemToBeDeleted: Task): void {\n    let index = this.allItemsList.findIndex(item => { return item.id === itemToBeDeleted.id })\n    if (!itemToBeDeleted.completed)\n      this.itemsLeft--;\n    this.allItemsList.splice(index, 1)\n\n  }\n\n  toggleCompleted(selectedItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item === selectedItem\n    })\n    this.allItemsList[index].completed = !this.allItemsList[index].completed;\n    if (selectedItem.completed) this.itemsLeft--\n    else this.itemsLeft++\n\n  }\n\n  onTaskbarAction(e: any): void {\n    if (e.target.id == 'clear') {\n      this.clearCompleted()\n      return\n    }\n\n    this.displayState = e.target.id;\n  }\n\n  onMouseHover(hoveredItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item.id === hoveredItem.id\n    })\n    if (index === -1)\n      return\n    this.allItemsList[index].isHovering = true\n  }\n\n  onMouseLeave(hoveredItem: Task): void {\n    let index = this.allItemsList.findIndex(item => {\n      return item.id === hoveredItem.id\n    })\n    if (index === -1)\n      return\n    this.allItemsList[index].isHovering = false\n  }\n\n  clearCompleted() {\n    let index\n    while (1) {\n\n      index = this.allItemsList.findIndex(item => {\n        return item.completed === true\n      })\n      if (index > -1)\n        this.onDelete(this.allItemsList[index])\n      else\n        break;\n    }\n\n   \n\n\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.allItemsList, event.previousIndex, event.currentIndex);\n  }\n  \n\n\n\n \n\n}\n","<div  id=\"new-item\" class=\"new-item\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n    <div appCheckbox class=\"round\" (click)=\"alreadyCompleted = !alreadyCompleted\">\n        <img id='im-new' src=\"../../assets/images/icon-check.svg\">\n    </div>\n    <div>\n        <form #inputData=\"ngForm\" (keydown)=\"onEnter($event,inputData)\">\n            <input type=\"text\" id=\"new-todo\" name=\"value\" autocomplete=\"off\" placeholder=\"Create a new todo...\" ngModel>\n        </form>\n    </div>\n</div>\n\n   \n    <div cdkDropList (cdkDropListDropped)=\"drop($event)\" class=\"list\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n\n        <div cdkDrag *ngFor=\"let item of allItemsList | filterCustom:(displayState !== 'all' || allItemsList) && displayState\" class=\"items\"  (mouseover)=\"onMouseHover(item)\" (mouseleave)=\"onMouseLeave(item)\" >\n                <div appCheckbox [setCompletedStatus]=\"item.completed\" class=\"round\" (click)=\"toggleCompleted(item)\">\n                    <img  id='im-{{item.id}}' src=\"../../assets/images/icon-check.svg\">\n                </div>\n                <li class=\"list-box\"[ngClass]=\"{'completed':item.completed}\">{{item.value}}\n                    <button id=\"{{item.id}}\" class=\"close\" [ngClass]=\"{'show-close-icon':item.isHovering}\" (click)=\"onDelete(item)\"></button>\n                </li>\n        </div>\n\n        <div *ngIf=\"allItemsList.length>0\" class=\"taskbar\" (click)=\"onTaskbarAction($event)\">\n            <span id=\"remaining-items\">{{itemsLeft}} items left</span>\n            <span appHighlightButton class=\"filter-buttons\">\n                <button id=\"all\">All</button>\n                <button id=\"active\">Active</button>\n                <button id=\"completed\">Completed</button>\n            </span>\n            <span><button id=\"clear\">Clear Completed</button></span>\n           \n        \n        \n        </div>\n       \n    </div>\n    <span *ngIf=\"allItemsList.length>0\" class=\"taskbar filter-buttons-responsive\" [ngClass]=\"{'light':displayMode==='light','dark':displayMode==='dark'}\">\n        <span class=\"filter-buttons-responsive\" appHighlightButton (click)=\"onTaskbarAction($event)\">\n            <button id=\"all\">All</button>\n            <button id=\"active\">Active</button>\n            <button id=\"completed\">Completed</button> \n        </span>\n    </span>\n    <p *ngIf=\"allItemsList.length>0\" style=\"text-align: center;color: hsl(233, 6%, 51%) ;\">Drag and drop to reorder list</p>\n   \n\n","import { Component,Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoApp';\n  mode = 'light'\n\n  constructor(@Inject(DOCUMENT)private document: Document){\n    this.document.body.style.background =  this.mode === 'light'?\"hsl(236, 33%, 92%)\":\"hsl(235, 21%, 11%)\";\n\n  }\n  changeMode(){\n    this.mode === 'light'?this.mode = 'dark':this.mode='light';\n    this.document.body.style.background =  this.mode === 'light'?\"hsl(236, 33%, 92%)\":\"hsl(235, 21%, 11%)\";\n  }\n}\n","<div id=\"header\" [ngClass]=\"{'light-mode':mode === 'light','dark-mode':mode === 'dark'}\"></div>\n<div class=\"input\">\n  <div class=\"title\">\n    <div class=\"heading\">T O D O\n    </div>\n    <button id=\"mode-icon\" [ngClass]=\"{'icon-light':mode === 'light','icon-dark':mode === 'dark'}\"\n      (click)=\"changeMode()\"></button>\n  </div>\n\n  <todo-list [displayMode]=\"mode\"></todo-list>\n</div>","import { Directive,HostListener,ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlightButton]'\n})\nexport class HighlightButtonDirective {\n\n  @HostListener('click', ['$event.target']) handleClick(btn){\n    this.element.nativeElement.childNodes[0].classList = ['']\n    this.element.nativeElement.childNodes[1].classList = ['']\n    this.element.nativeElement.childNodes[2].classList = ['']\n      if(btn.id === 'all'){\n        this.element.nativeElement.childNodes[0].classList.add('highlight')\n      }else if(btn.id === 'active'){\n        this.element.nativeElement.childNodes[1].classList.add('highlight')\n      }else if(btn.id === 'completed'){\n        this.element.nativeElement.childNodes[2].classList.add('highlight')\n      }\n  }\n  constructor(private element:ElementRef) { \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { FilterCustomPipe } from './filter-custom.pipe';\nimport { CheckboxDirective } from './checkbox.directive';\nimport { HighlightButtonDirective } from './highlight-button.directive';\nimport { DragDropModule } from '@angular/cdk/drag-drop'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent,\n    FilterCustomPipe,\n    CheckboxDirective,\n    HighlightButtonDirective\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    DragDropModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}